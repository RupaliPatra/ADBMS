db.createcollection('students')

db.students.insertMany([
  {
    name: "John",
    age: 20,
    marks: [80, 85, 90],
    grade: "A",
    hobbies: ["reading", "painting"],
    attendance: 90,
    GPA: 3.8
  },
  {
    name: "Emma",
    age: 21,
    marks: [95, 92, 98],
    grade: "A+",
    hobbies: ["singing", "dancing"],
    attendance: 95,
    GPA: 4.0
  },
])

//Retrieve all documents where the "age" field is greater than 20:
db.students.find({ $where: "this.age > 20" });


//Retrieve all documents where the length of the "name" field is less than 5 characters:
db.students.find({ $where: "this.name.length < 5" });


//Retrieve all documents where the "grade" field is equal to "A+":
db.students.find({ $where: "this.grade === 'A+'" });


//Retrieve all documents where the "marks" array has at least one element greater than 90:
db.students.find({ $where: "this.marks.some(mark => mark > 90)" });


//Retrieve all documents where the "hobbies" array contains the word "football":
db.students.find({ $where: "/football/.test(this.hobbies)" });


//Retrieve all documents where the "attendance" field is less than 75:
db.students.find({ $where: "this.attendance < 75" });


//Retrieve all documents where the "city" field is either "Mumbai" or "Delhi":
db.students.find({ $where: '["Mumbai", "Delhi"].includes(this.city)' });


//Retrieve all documents where the "GPA" field is between 3.5 and 4.0:
db.students.find({ $where: "this.GPA >= 3.5 && this.GPA <= 4.0" });


//Retrieve all documents where the "age" field is not equal to the "year" field:
db.students.find({ $where: "this.age !== this.year" });


//Retrieve all documents where the "subjects" array contains at least one element starting with the letter "C":
db.students.find({ $where: "this.subjects.some(subject => subject.startsWith('C'))" });

- In MongoDB, the "where" query is performed using the `find()` method.
- The "where" query allows you to specify conditions to filter the data in a collection.
- You can use a query object as a parameter to the `find()` method to define the conditions.
- The query object consists of key-value pairs, where the key represents the field you want to query and the value represents the condition.
- Different comparison operators, such as `$eq`, `$ne`, `$gt`, `$lt`, `$gte`, `$lte`, can be used to define the conditions.
- Logical operators like `$and`, `$or`, and `$not` can be used to combine multiple conditions.
- The "where" query in MongoDB is flexible and powerful, enabling you to retrieve specific data based on your defined conditions.


